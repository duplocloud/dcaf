# ðŸ“š DuploCloud Concepts Cheat-Sheet

## What "service" means here
â€¢ **DuploCloud Service** = one micro-service you declared in the DuploCloud UI.  
  â†³ DuploCloud materialises it as **one Kubernetes Deployment (or StatefulSet)** plus its Pods, HPA, ConfigMaps, etc.  
  â†³ The Deployment/Pods carry the label **app=<service-name>**.

â€¢ **It is *not* a Kubernetes `Service` object.**  
  â€“ A K8s `Service` is just the ClusterIP/LoadBalancer front-end DuploCloud creates for traffic.  
  â€“ When a user says "cart service", they almost always mean the *workload* (Deployment & Pods) called **cart**, not that K8s `Service` resource.

### Key takeaway
Whenever a user mentions "<n> service" inside DuploCloud, interpret it as **the Deployment/StatefulSet and its Pods labeled `app=<n>`**, *not* the Kubernetes `Service` resource.

# ðŸ“š DuploCloud CLI (duploctl) Command Reference

## Common duploctl Commands

### Service Management
â€¢ **List services**: `duploctl service list`
â€¢ **Find a service**: `duploctl service find <n>`
â€¢ **Get service details**: `duploctl service get <n>`
â€¢ **Create a service**: `duploctl service create --name <n> --docker-image <image> [options]`
â€¢ **Update a service**: `duploctl service update <n> [options]`
â€¢ **Delete a service**: `duploctl service delete <n>`
â€¢ **Rollback a service**: `duploctl service rollback <n> --to-revision <revision-number>`

### Service Command Options
â€¢ `--replicas <n>`: Set number of replicas
â€¢ `--docker-image <image>`: Specify Docker image
â€¢ `--cloud <0|1|2>`: Cloud provider (0=AWS, 1=Azure, 2=GCP)
â€¢ `--agent-platform <n>`: Platform type (7=Kubernetes)
â€¢ `--is-lb-synced-deployment`: Sync with load balancer
â€¢ `--network-id <id>`: Network identifier

### Best Practices
â€¢ Use command-line arguments instead of file-based configuration when possible
â€¢ For complex configurations, prepare YAML files and use `--file` option
